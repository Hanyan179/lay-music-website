---
description: 
globs: 
alwaysApply: false
---
1. 前端技术规范
框架与语言：Vue 3 + TypeScript，所有前端代码必须采用 TypeScript，确保类型安全。

样式管理：使用 Tailwind CSS 进行原子化样式设计，确保样式的一致性和可重用性。

组件化开发：所有 UI 组件必须符合苹果风格设计，并且按照功能进行模块化。

响应式布局：确保所有页面和组件在不同设备上有良好的适配，使用 Tailwind CSS 的响应式设计类。

UI 动画：使用 Lottie-web 和 Vue3-lottie 库进行动画效果，保持流畅的用户体验。

2. 后端技术规范
Spring Boot 架构：使用 Spring Boot 作为后端框架，确保后端系统的高效性和可扩展性。

数据库设计：使用 MySQL 进行数据持久化，采用 Spring Data JPA 进行 ORM 映射，确保数据库操作的简洁和安全。

安全性：后端 API 必须进行严格的权限控制与数据验证，确保数据安全性。

文件上传：使用 Express 和 Multer 处理文件上传，所有上传文件应经过必要的安全检查。

3. 项目结构与组织
前端结构：

按照功能模块进行分层，组件、页面、服务等文件应按功能划分清晰。

路由配置应采用 Vue Router 进行模块化管理，避免过多耦合。

后端结构：

后端项目应按业务功能进行分层，如控制器、服务、数据访问层等，确保清晰的分离关注点。

API 设计遵循 RESTful 风格，所有接口都应提供适当的文档支持。

4. 数据管理与存储
开发环境：前端数据在开发环境下使用 LocalStorage 和 Pinia 状态管理进行存储。

生产环境：数据存储采用 MySQL 数据库，并使用 Spring Data JPA 进行数据持久化。

文件存储：图片上传使用 Express 和 Multer 进行管理，上传文件需要进行限制和安全检查。

5. 部署与环境管理
静态部署：支持通过 Netlify、Vercel、GitHub Pages 等平台进行静态网站托管，适用于轻量级展示。

全栈部署：在需要用户数据持久化的情况下，采用 Spring Boot 后端 + MySQL 数据库进行全栈部署，确保系统的稳定性和可靠性。

6. UI 风格与设计
苹果风格：所有页面和组件的设计需遵循苹果风格极简设计原则，使用渐变蓝紫色系主题进行配色。

毛玻璃效果与流畅动画：所有 UI 组件要根据需求加入毛玻璃效果，并使用 Lottie 动画确保过渡效果平滑。

响应式布局：所有页面和组件必须具有响应式设计，适配不同设备和分辨率。

7. 对话记忆与规则更新
实时对话记忆：每次对话中，系统会自动记住当前对话的关键信息，避免重复查询之前的内容，提高沟通效率。

规则调整提醒：如果出现需要调整的项目规则或用户规则，系统将主动提醒并要求确认调整内容。调整后的规则会自动更新并保存，以便下一次对话时能继续基于最新规则进行沟通。


规则更新日志：每次规则更新时，会保留更新日志，帮助开发人员回溯历史规则调整，确保开发过程的一致性。